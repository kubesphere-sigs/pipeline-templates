apiVersion: devops.kubesphere.io/v1alpha3
kind: ClusterStepTemplate
metadata:
  name: withcredentials
  labels:
    step.devops.kubesphere.io/category: "general"
  annotations:
    devops.kubesphere.io/displayNameEN: "Load credential"
    devops.kubesphere.io/descriptionEN: "Loading credential into the environment variables"
    step.devops.kubesphere.io/icon: "key"
spec:
  runtime: dsl
  parameters:
    - name: credentialsId
      type: secret
      display: 'Credential Name'
    - name: usernameVariable
      type: string
      display: 'Username Variable'
      defaultValue: 'USER'
      condition: '.param.credentialsId.type==credential.devops.kubesphere.io/basic-auth||.param.credentialsId.type==credential.devops.kubesphere.io/ssh-auth'
    - name: passwordVariable
      type: string
      display: 'Password Variable'
      defaultValue: 'PASSWD'
      condition: '.param.credentialsId.type==credential.devops.kubesphere.io/basic-auth'
    - name: variable
      type: string
      display: 'Variable'
      defaultValue: 'VARIABLE'
      condition: '.param.credentialsId.type==credential.devops.kubesphere.io/secret-text||.param.credentialsId.type==credential.devops.kubesphere.io/kubeconfig'
    - name: keyFileVariable
      type: string
      display: 'KeyFile Variable'
      defaultValue: 'KEYFILEVARIABLE'
      condition: '.param.credentialsId.type==credential.devops.kubesphere.io/ssh-auth'
    - name: passphraseVariable
      type: string
      display: 'Passphrase Variable'
      defaultValue: 'PASSPHRASEVARIABLE'
      condition: '.param.credentialsId.type==credential.devops.kubesphere.io/ssh-auth'
    - name: type
      type: hidden
      defaultValue: 'PASSPHRASEVARIABLE'
  template: |
    {{if eq .param.credentialsId.type "credential.devops.kubesphere.io/basic-auth"}}
      {
        "arguments": {
          "isLiteral": false,
          "value": "${[usernamePassword(credentialsId: '{{.param.credentialsId.name}}', passwordVariable: '{{.param.passwordVariable}}', usernameVariable: '{{.param.usernameVariable}}')]}"
        },
        "children": [],
        "name": "withCredentials"
      }
    {{else if eq .param.credentialsId.type "credential.devops.kubesphere.io/secret-text"}}
      {
        "arguments": {
          "isLiteral": false,
          "value": "${[string(credentialsId: '{{.param.credentialsId.name}}', variable: '{{.param.variable}}')]}"
        },
        "children": [],
        "name": "withCredentials"
      }
    {{else if eq .param.credentialsId.type "credential.devops.kubesphere.io/kubeconfig"}}
      {
        "arguments": {
          "isLiteral": false,
          "value": "${[kubeconfigContent(credentialsId: '{{.param.credentialsId.name}}', variable: '{{.param.variable}}')]}"
        },
        "children": [],
        "name": "withCredentials"
      }
    {{else if eq .param.credentialsId.type "credential.devops.kubesphere.io/ssh-auth"}}
      {
        "arguments": {
          "isLiteral": false,
          "value": "${[sshUserPrivateKey(credentialsId: '{{.param.credentialsId.name}}', keyFileVariable : '{{.param.keyFileVariable}}' ,passphraseVariable : '{{.param.passphraseVariable}}' ,usernameVariable : '{{.param.usernameVariable}}')]}"
        },
        "children": [%s],
        "name": "withCredentials"
      }
    {{end}}
